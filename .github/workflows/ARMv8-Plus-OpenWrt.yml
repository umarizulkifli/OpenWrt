#===============================================
# Description: Build OpenWrt
# File name: build-openwrt.yml
# Lisence: MIT
# Author: P3TERX
# https://github.com/P3TERX
#===============================================

name: ARMv8 Plus OpenWrt

on:
  workflow_dispatch:
  schedule:
    - cron: '0 21 * * *'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: configs/armv8-plus.config
  DIY_SCRIPT: diy-script.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  FILE_NAME: ROOTFS_PLUS
  PRODUCT_NAME: ARMv8_PLUS
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SCRIPT
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SCRIPT

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success'
      run: |
        cp openwrt/.config build.config
        mkdir -p Packages
        mv -f openwrt/bin/packages/*/*/*.ipk Packages
        mv -f openwrt/bin/targets/*/*/packages/*.ipk Packages
        tar -zcvf Packages.tar.gz Packages
        mv *.config *.tar.gz openwrt/bin/targets/*/*
        cp -rf openwrt/bin/targets lean
        rm -rf openwrt/* && cd lean/*/*
        rm -rf packages feeds.buildinfo sha256sums version.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true'
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to release
      uses: ncipollo/release-action@main
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'
      with:
        name: R${{ env.DATE }} for ${{ env.FILE_NAME }}
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        tag: ${{ env.FILE_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          **This is temporary firmware for Armvirt 64**
          * 这是 ARMv8_PLUS 多功能版打包临时固件，不可直刷
          直刷固件参见 Tag 名为 ARMv8_PLUS 的 Releases
          当前使用版本:【编译前的最后一次[➦主源码](https://github.com/coolsnowwolf/lede)更新记录】
          ${{ env.useVersionInfo }}

    - name: Package armvirt as openwrt
      uses: unifreq/openwrt_packit@master
      if: steps.organize.outputs.status == 'success'
      env:
        OPENWRT_ARMVIRT: lean/*/*/*rootfs.tar.gz
        PACKAGE_SOC: all
        KERNEL_REPO_URL: https://github.com/ophub/kernel/tree/main/pub/stable
        KERNEL_VERSION_NAME: 5.15.13_5.19.1
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .gz

    - name: Upload openwrt to actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true'
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}

    - name: Upload openwrt to release
      uses: ncipollo/release-action@main
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true'
      with:
        name: R${{ env.DATE }} for ${{ env.PRODUCT_NAME }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          **This is OpenWrt firmware for Armvirt 64**
          * 这是 ARMv8 多功能版，集成插件多适合折腾
          默认 IP：192.168.1.1 默认密码：password
          安装到 EMMC：系统 → 晶晨宝盒 → 安装 OpenWrt → 选择型号 → 安装
          升级 OpenWrt：系统 → 晶晨宝盒 → 手动上传更新 或者 在线下载更新
          当前使用版本:【编译前的最后一次➦[主源码](https://github.com/coolsnowwolf/lede)更新记录】
          ${{ env.useVersionInfo }}
